---
import MainLayout from '../../layouts/MainLayout.astro';
import ProjectCard from '../../components/ProjectCard.astro';
import { getTopPageConfig } from '../../lib/projects';
import type { LocaleKey } from '@docs/i18n/locales';
import { translate } from '@docs/i18n/utils';

// 静的パスを生成する関数
export async function getStaticPaths() {
  const config = await getTopPageConfig();
  return config.supportedLangs.map(lang => ({
    params: { lang }
  }));
}

// 言語パラメータを取得
const { lang } = Astro.params;
const currentLang = lang as LocaleKey;

// 設定ファイルからプロジェクト一覧を取得
const topPageConfig = await getTopPageConfig();
const { projects, baseUrl, heroTitle, heroDescription, siteName, siteDescription, repository } = topPageConfig;
console.log(`Displaying ${projects.length} projects from config for lang: ${currentLang}`);

// ページタイトルを設定（サイト名を使用）
const pageTitle = siteName;
---

<MainLayout title={pageTitle} lang={currentLang}>
  <!-- メタデータを設定 -->
  <meta name="description" content={siteDescription[currentLang]} slot="head" />
  <!-- ヒーローセクション -->
  <section class="hero-section">
    <h1 class="hero-title">{heroTitle[currentLang]}</h1>
    <p class="hero-description">{heroDescription[currentLang]}</p>
  </section>
  
  <!-- プロジェクトセクション -->
  <section class="section">
    <div class="container">
      <h2 class="section-title">{translate('projects.title', currentLang)}</h2>
      <p class="section-description">{translate('projects.description', currentLang)}</p>
      
      <!-- プロジェクトグリッド -->
      <div class="project-grid">
        {projects.map(project => (
          <ProjectCard 
            project={project} 
            lang={currentLang} 
          />
        ))}
      </div>
    </div>
  </section>
  
</MainLayout>

<style>
  /* ヒーローセクションのスタイル調整 */
  .hero-section {
    background: linear-gradient(to bottom, var(--sl-color-blue-9), var(--sl-color-indigo-9));
    border-radius: 0.5rem;
    margin: 0 auto 2rem;
    max-width: var(--sl-content-width);
  }
  
</style>
