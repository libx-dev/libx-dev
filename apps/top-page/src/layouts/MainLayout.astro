---
/**
 * MainLayout - トップページの基本レイアウトコンポーネント
 */
import { Footer, ThemeToggle } from '@docs/ui/components';
import LanguageSelector from '../components/LanguageSelector.astro';
import type { LocaleKey } from '@docs/i18n/locales';
import '../styles/global.css';

// 定数定義
const BASE_URL = '';

// インターフェース定義
interface Props {
  /** ページタイトル */
  title: string;
  /** 言語コード */
  lang: LocaleKey;
}

// プロパティの取得
const { 
  title, 
  lang, 
} = Astro.props;

// ナビゲーション項目の定義
interface NavItem {
  title: string;
  href: string;
}

const navItems: NavItem[] = [
  { title: 'Home', href: `${BASE_URL}/${lang}` },
  { title: 'GitHub', href: 'https://github.com/dolphilia' },
];
---

<!DOCTYPE html>
<html lang={lang} data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href={`${BASE_URL}/favicon.svg`} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Documentation site built with Astro" />
    <title>{title} | Libx</title>
    <!-- 追加のheadコンテンツ用スロット -->
    <slot name="head" />
  </head>
  <body>
    <div class="page">
      <header class="header">
        <div class="header-container">
          <div class="header-content">

            <div class="title-wrapper">
              <a href={`${BASE_URL}/${lang}`} class="site-title">Libx</a>
            </div>

            <div class="print:hidden right-group">
              <div class="language-selector-container" aria-label="言語選択">
                <LanguageSelector currentLang={lang} />
              </div>
              <div class="theme-toggle-container">
                <ThemeToggle />
              </div>
            </div>
            
          </div>
        </div>
      </header>
      
      <div class="main-frame">
        <main id="main-content">
          <slot />
        </main>
      </div>
      
      <Footer 
        showContribute={true}
        contributeUrl="https://github.com/dolphilia"
        lang={lang}
      />
    </div>
  </body>
</html>

<style>
  /* Starlightスタイルに基づくレイアウト */
  .page {
    flex-direction: column;
    min-height: 100vh;
  }

  .header {
    z-index: var(--sl-z-index-navbar);
    position: inherit;
    inset-inline-start: 0;
    inset-block-start: 0;
    width: 100%;
    height: var(--sl-nav-height);
    border-bottom: 1px solid var(--sl-color-hairline-shade);
    padding: 0.75rem 0;
    background-color: var(--sl-color-bg-nav);
  }

  .header-container {
    max-width: 87.5rem; /* 1400px */
    width: 100%;
    padding: 0 1.5rem;
    margin: 0 auto;
    box-sizing: border-box;
  }
  
  @media (min-width: 50em) {
    .header-container {
      padding: 0 2rem;
    }
  }
  
  /* スクロールバーによる幅変化を防ぐ */
  html {
    scrollbar-gutter: stable;
  }

  .header-content {
    display: flex;
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  .title-wrapper {
    overflow: clip;
    padding: 0.25rem;
    margin: -0.25rem;
    min-width: 0;
  }

  .site-title {
    font-size: var(--sl-text-lg);
    font-weight: 600;
    color: var(--sl-color-white);
    text-decoration: none;
  }

  .right-group {
    display: flex;
    align-items: center;
    gap: 1rem;
  }


  .language-selector-container {
    display: flex;
    align-items: center;
  }

  .theme-toggle-container {
    display: flex;
    align-items: center;
  }

  .main-frame {
    padding-top: var(--sl-nav-height);
  }

  main {
    flex-grow: 1;
    padding: 0;
  }

  @media (min-width: 50em) {
    .header-content {
      /* display: grid; */
      grid-template-columns: minmax(auto, auto) 1fr auto;
      align-content: center;
    }
  }
</style>
