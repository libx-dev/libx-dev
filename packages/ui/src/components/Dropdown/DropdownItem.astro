---
interface Props {
  /**
   * 項目のラベル
   */
  label: string;
  
  /**
   * 項目のリンク先URL（省略可能）
   */
  href?: string;
  
  /**
   * 現在選択されている項目かどうか
   */
  isActive?: boolean;
  
  /**
   * 追加のCSSクラス
   */
  class?: string;
  
  /**
   * その他の属性
   */
  [key: string]: any;
}

const {
  label,
  href,
  isActive = false,
  class: className = '',
  ...attrs
} = Astro.props;
---

{href ? (
  <a 
    href={href} 
    class:list={[
      'dropdown-item',
      isActive && 'dropdown-item-active',
      className
    ]}
    role="menuitem"
    tabindex="-1"
    aria-current={isActive ? 'page' : undefined}
    {...attrs}
  >
    <slot name="before-label" />
    <span class="dropdown-item-label">{label}</span>
    <slot name="after-label" />
    <slot />
  </a>
) : (
  <button 
    type="button"
    class:list={[
      'dropdown-item',
      isActive && 'dropdown-item-active',
      className
    ]}
    role="menuitem"
    tabindex="-1"
    aria-current={isActive ? 'true' : undefined}
    {...attrs}
  >
    <slot name="before-label" />
    <span class="dropdown-item-label">{label}</span>
    <slot name="after-label" />
    <slot />
  </button>
)}

<style>
  .dropdown-item {
    display: flex;
    align-items: center;
    width: 100%;
    padding: 0.5rem 1rem;
    font-size: var(--font-size-sm); /* Updated */
    color: var(--color-text-secondary); /* Updated */
    text-align: left;
    background-color: transparent;
    border: none;
    cursor: pointer;
    transition: background-color 0.2s, color 0.2s;
  }

  .dropdown-item:hover {
    background-color: var(--color-bg-tertiary); /* Updated */
    color: var(--color-text-primary); /* Updated */
  }

  .dropdown-item-active {
    background-color: var(--color-bg-tertiary); /* Updated */
    color: var(--color-text-primary); /* Updated */
    font-weight: 500;
  }

  .dropdown-item-label {
    flex: 1;
  }

  /* ThemeToggleによるテーマ切り替え対応 */
  /* No need for :global(.dark) or :global(:not(.dark)) specific overrides here if variables.css is correctly set up */
  /* The component will automatically use the updated global CSS variables based on the html.dark class */
</style>
