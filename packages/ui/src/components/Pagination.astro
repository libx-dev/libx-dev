---
interface PageLink {
  /**
   * ページのタイトル
   */
  title: string;
  
  /**
   * ページのURL
   */
  url: string;
}

import { translate } from '@docs/i18n/utils';
import type { LocaleKey } from '@docs/i18n/locales';

interface Props {
  /**
   * 前のページへのリンク情報
   */
  prev?: PageLink;
  
  /**
   * 次のページへのリンク情報
   */
  next?: PageLink;
  
  /**
   * 文字の方向（RTLサポート用）
   * @default 'ltr'
   */
  dir?: 'ltr' | 'rtl';
  
  /**
   * 言語コード（翻訳用）
   */
  lang?: LocaleKey;
}

const { prev, next, dir = 'ltr', lang = 'en' } = Astro.props;
const isRtl = dir === 'rtl';

const prevText = translate('pagination.previous', lang);
const nextText = translate('pagination.next', lang);
---

<div class="pagination-links" dir={dir}>
  {
    prev && (
      <a href={prev.url} rel="prev">
        <svg class="arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
          <path fill="currentColor" d={isRtl ? "M10.7 17.3c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L12.6 13 9.3 9.7c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-3.6 3.6z" : "M13.3 17.3L9.7 13.7c-.4-.4-.4-1 0-1.4l3.6-3.6c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L11.4 13l3.3 3.3c.4.4.4 1 0 1.4-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3z"} />
        </svg>
        <span>
          {prevText}
          <br />
          <span class="link-title">{prev.title}</span>
        </span>
      </a>
    )
  }
  {
    next && (
      <a href={next.url} rel="next">
        <svg class="arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
          <path fill="currentColor" d={isRtl ? "M13.3 17.3L9.7 13.7c-.4-.4-.4-1 0-1.4l3.6-3.6c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L11.4 13l3.3 3.3c.4.4.4 1 0 1.4-.2.2-.4.3-.7.3-.3 0-.5-.1-.7-.3z" : "M10.7 17.3c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L12.6 13 9.3 9.7c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-3.6 3.6z"} />
        </svg>
        <span>
          {nextText}
          <br />
          <span class="link-title">{next.title}</span>
        </span>
      </a>
    )
  }
</div>

<style>
  .pagination-links {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    /* 前のページのみの場合でもレイアウトを維持 */
    grid-template-areas: "prev next";
  }

  a {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    max-width: 100%;
    border: 1px solid var(--sl-color-gray-5);
    border-radius: 0.5rem;
    padding: 1rem;
    text-decoration: none;
    color: var(--sl-color-gray-2);
    box-shadow: var(--sl-shadow-md);
    overflow-wrap: anywhere;
    transition: border-color 0.2s ease, color 0.2s ease;
  }
  
  a[rel='prev'] {
    justify-content: flex-start;
    grid-area: prev;
    justify-self: start;
  }
  
  a[rel='next'] {
    justify-content: flex-end;
    text-align: end;
    flex-direction: row-reverse;
    grid-area: next;
    justify-self: end;
  }
  
  /* 片方のリンクのみの場合の調整 */
  .pagination-links:has(a[rel='prev']:only-child) a[rel='prev'] {
    grid-area: prev;
    justify-self: start;
  }
  
  .pagination-links:has(a[rel='next']:only-child) a[rel='next'] {
    grid-area: next;
    justify-self: end;
  }
  
  a:hover {
    border-color: var(--sl-color-gray-2);
    color: var(--sl-color-white);
  }

  .link-title {
    color: var(--sl-color-white);
    font-size: var(--sl-text-2xl);
    line-height: var(--sl-line-height-headings);
  }

  .arrow {
    flex-shrink: 0;
    width: 1.5rem;
    height: 1.5rem;
  }
</style>
